About
=====
This puppet repo is meant to be a fairly generic puppet config to work with
modern Centos 5 and eventually 6 EC2 AMI's.  Currently this has been tested with
`ami-5624d63f`.  You can use a command like this to fire up an instance:

    ec2-run-instances ami-5624d63f -k **accesskey** --instance-type t1.micro --group webserver --availability-zone us-east-1d --disable-api-termination

nodes.pp and security groups
============================
EC2 instances come with a standard hostname scheme which means that we must come up with other
ways if identifying various nodes.  This repo currently supports using the names of security groups 
to meet this goal.  In the future there will be also be some custom scripts that turn instance tags into
custom facts.

AWS Tools
=========
This puppet repo will install some custom built
RPMs that contain the EC2 API Tools, EC2 Metadata Tool, and AWS Cloudformation
utilities provided by Amazon.  They were built using [fpm](http://www.semicomplete.com/blog/tags/deb)
and can be rebuilt with commands similar to these from within the respective **renamed** directories:

    fpm -s dir -t rpm  --prefix /opt/aws/ec2-api-tools ./lib ./bin
    fpm -s dir -t rpm  --prefix /opt/aws/AWSCloudFormation ./lib ./bin
    fpm -s dir -t rpm  --prefix /opt/aws/ec2-metadata ./bin

The private repo
================
To be utilized most effectively one can construct a private puppet repo structured like the one below.
This repo will be used to hold keys, paths, and values that are specific to the AWS tools.

    .
    |-- manifests
    |   `-- private-nodes.pp
    `-- modules
        |-- aws-cf-credentials
        |   |-- files
        |   |   `-- opt
        |   |       `-- aws
        |   |           `-- AWSCloudFormation
        |   |               `-- credential-file
        |   `-- manifests
        |       `-- init.pp
        `-- ec2-api-tools-certs
            |-- files
            |   |-- etc
            |   |   `-- ec2rc
            |   `-- opt
            |       `-- aws
            |           `-- ec2-certs
            |               |-- accesskey.pem
            |               |-- cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem
            |               `-- pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem
            `-- manifests
                `-- init.pp

###File contents
`manifests/private-nodes.pp`

    node default {
        if $ec2_security_groups =~ /admin/ {
            include ec2-api-tools-certs
            include aws-cf-credentials
        } else {
            notify {"No private modules for security group: $ec2_security_groups":}
        }
    }

`modules/ec2-api-tools-certs/manifests/init.pp`

    class ec2-api-tools-certs {
        file { ["/opt/aws/ec2-certs"]:
            ensure => "directory",
        }

        file { "/opt/aws/ec2-certs/accesskey.pem":
            source => "puppet:///modules/ec2-api-tools-certs/opt/aws/ec2-certs/accesskey.pem",
            owner  => "root",
            group  => "root",
            mode   => 600,
        }

        file { "/opt/aws/ec2-certs/cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem":
            source => "puppet:///modules/ec2-api-tools-certs/opt/aws/ec2-certs/cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem",
            owner  => "root",
            group  => "root",
            mode   => 644,
        }

        file { "/opt/aws/ec2-certs/pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem":
            source => "puppet:///modules/ec2-api-tools-certs/opt/aws/ec2-certs/pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem",
            owner  => "root",
            group  => "root",
            mode   => 644,
        }

        file { "/etc/ec2rc":
            source => "puppet:///modules/ec2-api-tools-certs/etc/ec2rc",
            owner  => "root",
            group  => "root",
            mode   => 644,
        }
    }

`modules/ec2-api-tools-certs/files/etc/ec2rc`

    #################
    # EC2 API TOOLS #
    #################
    export PATH=$PATH:/opt/aws/ec2-api-tools/bin
    export EC2_HOME=/opt/aws/ec2-api-tools
    export EC2_CERT=/opt/aws/ec2-certs/cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem
    export EC2_PRIVATE_KEY=/opt/aws/ec2-certs/pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem

    #######################
    # AWS Cloud Formation #
    #######################
    export PATH=$PATH:/opt/aws/AWSCloudFormation/bin
    export AWS_CLOUDFORMATION_HOME=/opt/aws/AWSCloudFormation
    export AWS_CREDENTIAL_FILE=/opt/aws/AWSCloudFormation/credential-file

    ######################
    # EC2 Metadata Tools #
    ######################
    export PATH=$PATH:/opt/aws/ec2-metadata/bin

`modules/aws-cf-credentials/manifests/init.pp`

    class aws-cf-credentials {
        file { ["/opt/aws/AWSCloudFormation"]:
            ensure => "directory",
        }

        file { "/opt/aws/AWSCloudFormation/credential-file":
            source => "puppet:///modules/aws-cf-credentials/opt/aws/AWSCloudFormation/credential-file",
            owner  => "root",
            group  => "root",
            mode   => 600,
        }
    }

`modules/aws-cf-credentials/files/opt/aws/AWSCloudFormation/credential-file`

    AWSAccessKeyId=XXXXXXXXXXXXXXXXXXXXX
    AWSSecretKey=XXXXXXXXXXXXXXXXXXXXX
